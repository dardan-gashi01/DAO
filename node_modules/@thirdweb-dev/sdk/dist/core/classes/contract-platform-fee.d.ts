import { IThirdwebPlatformFee } from "@thirdweb-dev/contracts";
import { ContractWrapper } from "./contract-wrapper";
import { TransactionResult } from "../types";
import { CommonPlatformFeeSchema } from "../../schema";
import { z } from "zod";
/**
 * Handles primary sales recipients for a Contract
 * @public
 */
export declare class ContractPlatformFee<TContract extends IThirdwebPlatformFee> {
    private contractWrapper;
    constructor(contractWrapper: ContractWrapper<TContract>);
    /**
     * Get the platform fee recipient and basis points
     * @returns the wallet address.
     */
    get(): Promise<{
        platform_fee_basis_points: number;
        platform_fee_recipient: string;
    }>;
    /**
     * Set the platform fee recipient and basis points
     * @param platformFeeInfo - the platform fee information
     */
    set(platformFeeInfo: z.input<typeof CommonPlatformFeeSchema>): Promise<TransactionResult>;
}
